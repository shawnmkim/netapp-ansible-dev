################################################################################
#
#   Author      :   Ken Hillier
#   Date        :   19 May 2021
#
#   Description :   Workflow to create multiple volumes based on a template
#
#   Dependencies: netapp.ontap collection
#
################################################################################
---
- hosts:                localhost
  name:                 Multi-Volume Creation Workflow
  gather_facts:         false
  collections:
    -                   ansible.builtin
    -                   netapp.ontap
  vars:
    login: &login
      hostname:         "{{ netapp_hostname }}"
      username:         "{{ netapp_username }}"
      password:         "{{ netapp_password }}"
      https:            "{{ netapp_https }}"
      validate_certs:   "{{ netapp_validate_certs }}"
    state:              present

    aggr: "{{ cluster }}_01_aggr1"
    vserver: ontap-vs01

  vars_files:
    vars/vars_multivol.yml

  pre_tasks:
    #---------------------------------------------------------------------------
    # PRE VALIDATION STEPS:
    #  - Attempting to mimic as much of WFA controls as possible
    #  - This performs the minimum possible validation against inputs
    #---------------------------------------------------------------------------
  - name:                       "Asserting mandatory storage details are defined properly"
    assert:
      that:
        -                       netapp_hostname is defined
        -                       netapp_username is defined
        -                       netapp_password is defined
        -                       netapp_https is defined
        -                       netapp_validate_certs is defined
        -                       vserver is defined
      fail_msg:                 "One or more variables are missing from submission"


  tasks:

  # Creating policy dependancies for the volume creation process
  - name: create qos policy group
    na_ontap_qos_policy_group:
      <<: *login
      state: "{{ state }}"

      name: "{{ item.name }}"
      vserver: "{{ item.vserver }}"
      max_throughput: "{{ item.max | default(omit) }}"
      min_throughput: "{{ item.min | default(omit) }}"

    loop: "{{ qos_policies }}"

  - name: Create Export Policy
    na_ontap_export_policy:
      <<: *login
      state: "{{ state }}"

      name: "{{ item.name }}"
      vserver: "{{ item.vserver }}"

    loop: "{{ export_policies }}"

  - name: Create Snapshot policy
    na_ontap_snapshot_policy:
      <<: *login
      state: "{{ state }}"

      name: "{{ item.name }}"
      schedule: "{{ item.sched }}"
      prefix: "{{ item.prefix | default(omit) }}"
      count: "{{ item.count }}"
      enabled: "{{ item.enabled }}"

    loop: "{{ snap_policies }}"

  # Creating multiple volumes
  - name: 'Create {{ number }} {{ type }} volumes based on the  {{ type }} template'
    na_ontap_volume:
      <<: *login
      state: "{{ state }}"

      aggregate_name: "{{ aggr }}"
      vserver: "{{ vserver }}"

      name:       "{{ type }}_{{ count }}"
      size:       "{{ vol_templates[type]['size'] | int }}"
      size_unit:  "{{ vol_templates[type]['size_unit'] | default('tb') }}"

      percent_snapshot_space: "{{ vol_templates[type]['snap_precent'] | default(0)  }}"
      qos_policy_group: "{{ vol_templates[type]['qos_policy'] | default(omit)  }}"
      snapshot_policy: "{{ vol_templates[type]['snap_policy'] | default(omit)  }}"
      export_policy: "{{ vol_templates[type]['export_policy'] | default(omit)  }}"

      # comment: '{{ opt_volume_comment_01  | default(omit)  }}'

    with_sequence: count='{{ number }}'

    loop_control:
      index_var: count
    register: results
    tags: create

  # Adjust "MAX" autosize
  - name: Modify volume autosize
    na_ontap_volume_autosize:
      <<: *login
      # state: "{{ state }}"

      vserver: "{{ vserver }}"

      # volume: ansibleVolumesize12
      # mode: grow
      # grow_threshold_percent: 99
      # increment_size: 50m
      maximum_size:  "{{ vol_templates[type]['max_autosize'] | default(omit) }}"
      # minimum_size: 21m
      # shrink_threshold_percent: 40

      volume: "{{ type }}_{{ count }}"

    # with_items: "{{ type }}"
    with_sequence: count='{{ number | int }}'
    # with_sequence: count='5'
    loop_control:
      index_var: count
    register: results
    tags: create
